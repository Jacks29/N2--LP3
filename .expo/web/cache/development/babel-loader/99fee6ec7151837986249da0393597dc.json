{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Programacao\\\\ReactNative\\\\N2LP3\\\\App.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DarkTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Details\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction DetailsScreen() {\n  var _useState = useState(\"sfw\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedType = _useState2[0],\n      setselectedType = _useState2[1];\n\n  var _useState3 = useState(\"waifu\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCategory = _useState4[0],\n      setselectedCategory = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Tipo Imagem\"), React.createElement(Picker, {\n    style: {\n      height: 50,\n      width: 150\n    },\n    selectedValue: selectedType,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setselectedType(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"NSFW\",\n    value: \"nsfw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"SFW\",\n    value: \"sfw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Categoria\"), React.createElement(Picker, {\n    style: {\n      height: 50,\n      width: 150\n    },\n    selectedValue: selectedCategory,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setselectedCategory(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"waifu\",\n    value: \"waifu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"neko\",\n    value: \"neko\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    title: \"Pegar Imagem\",\n    onPress: this.GetImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction GetImage() {\n  var _this = this;\n\n  return fetch(\"https://reactnative.dev/movies.json\").then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return React.createElement(FlatList, {\n      data: json.movies,\n      keyExtractor: function keyExtractor(_ref2, index) {\n        var id = _ref2.id;\n        return id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, item.title, \", \", item.releaseYear);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    });\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 40,\n    alignItems: \"center\",\n    backgroundColor: \"#4287f5\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/Programacao/ReactNative/N2LP3/App.js"],"names":["React","useState","DarkTheme","NavigationContainer","createNativeStackNavigator","HomeScreen","navigation","flex","alignItems","justifyContent","navigate","DetailsScreen","selectedType","setselectedType","selectedCategory","setselectedCategory","styles","container","height","width","itemValue","itemIndex","GetImage","Stack","fetch","then","response","json","movies","index","id","item","title","releaseYear","catch","error","console","App","StyleSheet","create","paddingTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, View, Text, Picker, StyleSheet } from \"react-native\";\nimport { DarkTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate(\"Details\")}\n      />\n    </View>\n  );\n}\n\nfunction DetailsScreen() {\n  const [selectedType, setselectedType] = useState(\"sfw\");\n  const [selectedCategory, setselectedCategory] = useState(\"waifu\");\n  return (\n    <View style={styles.container}>\n      <Text>Tipo Imagem</Text>\n      <Picker\n        style={{ height: 50, width: 150 }}\n        selectedValue={selectedType}\n        onValueChange={(itemValue, itemIndex) => setselectedType(itemValue)}\n      >\n        <Picker.Item label=\"NSFW\" value=\"nsfw\" />\n        <Picker.Item label=\"SFW\" value=\"sfw\" />\n      </Picker>\n      <Text>Categoria</Text>\n      <Picker\n        style={{ height: 50, width: 150 }}\n        selectedValue={selectedCategory}\n        onValueChange={(itemValue, itemIndex) => setselectedCategory(itemValue)}\n      >\n        <Picker.Item label=\"waifu\" value=\"waifu\" />\n        <Picker.Item label=\"neko\" value=\"neko\" />\n      </Picker>\n\n      <Button title=\"Pegar Imagem\" onPress={this.GetImage} />\n    </View>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction GetImage() {\n  return fetch(\"https://reactnative.dev/movies.json\")\n    .then((response) => response.json())\n    .then((json) => {\n      return (\n        <FlatList\n          data={json.movies}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => (\n            <Text>\n              {item.title}, {item.releaseYear}\n            </Text>\n          )}\n        />\n      );\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 40,\n    alignItems: \"center\",\n    backgroundColor: \"#4287f5\",\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}