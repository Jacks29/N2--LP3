{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Programacao\\\\ReactNative\\\\N2LP3\\\\App.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { DarkTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Details\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction DetailsScreen() {\n  var _useState = useState(\"sfw\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedType = _useState2[0],\n      setselectedType = _useState2[1];\n\n  var _useState3 = useState(\"waifu\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCategory = _useState4[0],\n      setselectedCategory = _useState4[1];\n\n  var _useState5 = useState(\"https://pm1.narvii.com/6229/48b18017f9735fe890dc583b891ce53dfadbcb32_hq.jpg\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imagemApi = _useState6[0],\n      setImagemApi = _useState6[1];\n\n  var GetImage = function GetImage() {\n    return fetch(\"https://api.waifu.pics/\" + selectedType + \"/\" + selectedCategory + \"\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setImagemApi(json.url);\n      return console.log(json.url);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Tipo Imagem\"), React.createElement(Picker, {\n    style: {\n      height: 50,\n      width: 150\n    },\n    selectedValue: selectedType,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setselectedType(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"NSFW\",\n    value: \"nsfw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"SFW\",\n    value: \"sfw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Categoria\"), React.createElement(Picker, {\n    style: {\n      height: 50,\n      width: 150\n    },\n    selectedValue: selectedCategory,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setselectedCategory(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"waifu\",\n    value: \"waifu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"neko\",\n    value: \"neko\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    title: \"Pegar Imagem\",\n    onPress: GetImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    style: {\n      height: 350,\n      width: 400\n    },\n    source: {\n      uri: imagemApi\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 40,\n    alignItems: \"center\",\n    backgroundColor: \"#4287f5\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/Programacao/ReactNative/N2LP3/App.js"],"names":["React","useState","DarkTheme","NavigationContainer","createNativeStackNavigator","HomeScreen","navigation","flex","alignItems","justifyContent","navigate","DetailsScreen","selectedType","setselectedType","selectedCategory","setselectedCategory","imagemApi","setImagemApi","GetImage","fetch","then","response","json","url","console","log","catch","error","styles","container","height","width","itemValue","itemIndex","uri","Stack","App","StyleSheet","create","paddingTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, View, Text, Picker, StyleSheet, Image } from \"react-native\";\nimport { DarkTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate(\"Details\")}\n      />\n    </View>\n  );\n}\n\nfunction DetailsScreen() {\n  const [selectedType, setselectedType] = useState(\"sfw\");\n  const [selectedCategory, setselectedCategory] = useState(\"waifu\");\n  const [imagemApi, setImagemApi] = useState(\n    \"https://pm1.narvii.com/6229/48b18017f9735fe890dc583b891ce53dfadbcb32_hq.jpg\"\n  );\n\n  const GetImage = () => {\n    return fetch(\n      \"https://api.waifu.pics/\" + selectedType + \"/\" + selectedCategory + \"\"\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        setImagemApi(json.url);\n        return console.log(json.url);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Tipo Imagem</Text>\n      <Picker\n        style={{ height: 50, width: 150 }}\n        selectedValue={selectedType}\n        onValueChange={(itemValue, itemIndex) => setselectedType(itemValue)}\n      >\n        <Picker.Item label=\"NSFW\" value=\"nsfw\" />\n        <Picker.Item label=\"SFW\" value=\"sfw\" />\n      </Picker>\n      <Text>Categoria</Text>\n      <Picker\n        style={{ height: 50, width: 150 }}\n        selectedValue={selectedCategory}\n        onValueChange={(itemValue, itemIndex) => setselectedCategory(itemValue)}\n      >\n        <Picker.Item label=\"waifu\" value=\"waifu\" />\n        <Picker.Item label=\"neko\" value=\"neko\" />\n      </Picker>\n\n      <Button title=\"Pegar Imagem\" onPress={GetImage} />\n\n      <Image style={{ height: 350, width: 400 }} source={{ uri: imagemApi }} />\n    </View>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 40,\n    alignItems: \"center\",\n    backgroundColor: \"#4287f5\",\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}